name: Build & Deploy to Ubuntu VM

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: 🐋 Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: 🐳 Build Docker image
      run: |
        docker build -t ${{ secrets.APP_NAME }} .

    - name: 🗜 Save Docker image as tarball
      run: |
        docker save ${{ secrets.APP_NAME }} | gzip > image.tar.gz

    - name: 🔐 Set up SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: 📤 Copy Docker image to VM
      run: |
        scp -o StrictHostKeyChecking=no image.tar.gz ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:/tmp/

    - name: 🚀 Load and Run Docker image on VM
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
          set -e

          IMAGE_NAME="${{ secrets.APP_NAME }}"
          CONTAINER_NAME="${{ secrets.APP_NAME }}"

          echo "🗜 Loading image"
          gunzip -c /tmp/image.tar.gz | docker load

          echo "🧹 Cleaning up old container if running"
          docker rm -f "$CONTAINER_NAME" || true

          echo "🚀 Running container"
          docker run -d --name "$CONTAINER_NAME" -p 5001:8080 "$IMAGE_NAME"

        EOF
